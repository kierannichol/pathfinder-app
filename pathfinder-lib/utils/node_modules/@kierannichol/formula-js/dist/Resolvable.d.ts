import { DataContext } from "./DataContext";
import { ResolvedValue } from "./ResolvedValue";
export declare abstract class Resolvable {
  static just(value: string | number | boolean | ResolvedValue): Resolvable;
  abstract asFormula(): string;
  abstract resolve(context?: DataContext): ResolvedValue | undefined;
  map(fn: (resolved: ResolvedValue) => ResolvedValue): Resolvable;
  private static StaticResolvable;
  private static MappedResolvable;
  static readonly True: Resolvable;
  static readonly False: Resolvable;
  static readonly None: Resolvable;
}
