export interface ResolvedValue {
  asText(): string;
  asNumber(): number;
  asBoolean(): boolean;
  asList(): ResolvedValue[];
  hasValue(): boolean;
  equals(other: ResolvedValue): boolean;
  map(fn: (value: ResolvedValue) => ResolvedValue): ResolvedValue;
}
export declare abstract class ResolvedValue {
  static readonly True: ResolvedValue;
  static readonly False: ResolvedValue;
  static readonly None: ResolvedValue;
  static of(
    value:
      | string
      | number
      | boolean
      | ResolvedValue
      | (string | number | boolean | ResolvedValue)[]
  ): ResolvedValue;
}
